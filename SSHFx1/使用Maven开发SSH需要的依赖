<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.baidu.mavenweb</groupId>
    <artifactId>mavenweb</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    
    <!--以值替代名称，Properties可以在整个POM中使用。格式是<name>value</name>。 -->  
<properties>  
    <!-- spring版本号 -->  
    <spring.version>4.3.4.RELEASE</spring.version>  
</properties>  
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <!-- 指定端口 -->
                    <port>8080</port>
                    <!-- 请求路径 -->
                    <path>/</path>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>tomcat-maven-plugin</artifactId>
                <version>1.1</version>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.5</version>
            <!-- 编译但不打包  由于  服务器也有  会发生冲突   会报错 -->
            <scope>provided</scope>
        </dependency>
        <!-- 解决了jsp错误问题 -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jsp-api</artifactId>
            <version>2.0</version>
            <scope>provided</scope>
        </dependency>
        
        <!-- 日志文件管理依赖 -->  
    <!-- java日志：slf4j，log4j，logback，common-logging； slf4j 是规范/接口 ；日志实现：log4j，logback，common-logging -->  
    <!-- log start -->  
    <dependency>  
        <groupId>org.slf4j</groupId>  
        <artifactId>slf4j-api</artifactId>  
        <version>1.7.12</version>  
    </dependency>  
    <dependency>  
        <groupId>ch.qos.logback</groupId>  
        <artifactId>logback-core</artifactId>  
        <version>1.1.1</version>  
    </dependency>  
    <dependency>  
        <groupId>ch.qos.logback</groupId>  
        <artifactId>logback-classic</artifactId>  
        <version>1.1.1</version>  
    </dependency>  
    <dependency>  
        <groupId>log4j</groupId>  
        <artifactId>log4j</artifactId>  
        <version>1.2.16</version>  
    </dependency>  
    
    <!-- 数据库相关依赖 -->  
    <!-- mysql数据库驱动 -->  
    <dependency>  
        <groupId>mysql</groupId>  
        <artifactId>mysql-connector-java</artifactId>  
        <version>5.1.35</version>  
    </dependency>  
    <!-- c3p0数据库连接池 -->  
    <dependency>  
        <groupId>c3p0</groupId>  
        <artifactId>c3p0</artifactId>  
        <version>0.9.1.2</version>  
    </dependency>  
        <!-- Struts2 start -->  
    <!-- Struts2 核心包 -->  
    <dependency>  
        <groupId>org.apache.struts</groupId>  
        <artifactId>struts2-core</artifactId>  
        <version>2.3.14</version>  
        <!-- 这里的 exclusions 是排除包，因为 Struts2中有javassist，Hibernate中也有javassist,   
            所以如果要整合Hibernate，一定要排除掉Struts2中的javassist，否则就冲突了。 -->  
        <exclusions>  
            <exclusion>  
                <groupId>javassist</groupId>  
                <artifactId>javassist</artifactId>  
            </exclusion>  
        </exclusions>  
    </dependency>  
    <!-- strus2整合spring的插件包 -->  
    <dependency>  
        <groupId>org.apache.struts</groupId>  
        <artifactId>struts2-spring-plugin</artifactId>  
        <version>2.3.14</version>  
    </dependency>  
    <!--使用了这个插件之后，就可以很方便的浏览项目中的所有action及其与 jsp view的映射 -->  
    <dependency>  
        <groupId>org.apache.struts</groupId>  
        <artifactId>struts2-config-browser-plugin</artifactId>  
        <version>2.3.14</version>  
    </dependency>  
    <!-- strus2的支持注解的包 -->  
    <dependency>  
        <groupId>org.apache.struts</groupId>  
        <artifactId>struts2-convention-plugin</artifactId>  
        <version>2.3.14</version>  
    </dependency>  
    <!-- Struts2 end -->  
    
     <!-- Spring start -->  
    <!-- Spring 核心依赖 -->  
    <dependency>  
        <groupId>org.springframework</groupId>  
        <artifactId>spring-core</artifactId>  
        <version>${spring.version}</version>  
    </dependency>  
    <dependency>  
        <groupId>org.springframework</groupId>  
        <artifactId>spring-beans</artifactId>  
        <version>${spring.version}</version>  
    </dependency>  
    <dependency>  
        <groupId>org.springframework</groupId>  
        <artifactId>spring-context</artifactId>  
        <version>${spring.version}</version>  
    </dependency>  
    <dependency>  
        <groupId>org.springframework</groupId>  
        <artifactId>spring-context-support</artifactId>  
        <version>${spring.version}</version>  
    </dependency>  
    <!-- Spring DAO层依赖 -->  
    <dependency>  
        <groupId>org.springframework</groupId>  
        <artifactId>spring-jdbc</artifactId>  
        <version>${spring.version}</version>  
    </dependency>  
    <dependency>  
        <groupId>org.springframework</groupId>  
        <artifactId>spring-tx</artifactId>  
        <version>${spring.version}</version>  
    </dependency>  
    <!-- Spring web相关依赖 -->  
    <dependency>  
        <groupId>org.springframework</groupId>  
        <artifactId>spring-web</artifactId>  
        <version>${spring.version}</version>  
    </dependency>  
    <!-- Spring 单元测试依赖 -->  
    <dependency>  
        <groupId>org.springframework</groupId>  
        <artifactId>spring-test</artifactId>  
        <version>${spring.version}</version>  
        <scope>test</scope>  
    </dependency>  
    <!-- Spring 表达式语言依赖 -->  
    <dependency>  
        <groupId>org.springframework</groupId>  
        <artifactId>spring-expression</artifactId>  
        <version>${spring.version}</version>  
    </dependency>  
    <!-- Spring aop依赖 -->  
    <dependency>  
        <groupId>org.springframework</groupId>  
        <artifactId>spring-aop</artifactId>  
        <version>${spring.version}</version>  
    </dependency>  
    <dependency>  
        <groupId>org.springframework</groupId>  
        <artifactId>spring-aspects</artifactId>  
        <version>${spring.version}</version>  
    </dependency>  
    <!-- Spring 整合Hibernate依赖 -->  
    <dependency>  
        <groupId>org.springframework</groupId>  
        <artifactId>spring-orm</artifactId>  
        <version>${spring.version}</version>  
    </dependency>  
    <!-- Spring end -->  
  
    <!-- 添加Hibernate依赖 -->  
    <dependency>  
        <groupId>org.hibernate</groupId>  
        <artifactId>hibernate-core</artifactId>  
        <version>5.0.7.Final</version>  
    </dependency>  
  
    <!-- Servlet Web相关依赖 -->  
    <dependency>  
        <groupId>taglibs</groupId>  
        <artifactId>standard</artifactId>  
        <version>1.1.2</version>  
    </dependency>  
    <!-- JSTL标签类 -->  
    <dependency>  
        <groupId>jstl</groupId>  
        <artifactId>jstl</artifactId>  
        <version>1.2</version>  
    </dependency>  
    <!-- JSON依赖 -->  
    <dependency>  
        <groupId>com.fasterxml.jackson.core</groupId>  
        <artifactId>jackson-databind</artifactId>  
        <version>2.5.4</version>  
    </dependency>  
    <dependency>  
        <groupId>org.codehaus.jackson</groupId>  
        <artifactId>jackson-mapper-asl</artifactId>  
        <version>1.9.13</version>  
    </dependency>  
   
    </dependencies>
</project>